### phase01 - cluster health
GET /_cluster/health?pretty

### phase01 - list candidate indices
GET /_cat/indices/paloalto-*,paloalto-linux-*,filebeat-*,logs-*?v&s=index&h=index,docs.count,store.size

### phase02 - gpsvc presence (sample)
GET paloalto-linux-messages-*/_search
{
  "size": 3,
  "track_total_hits": true,
  "_source": ["@timestamp","log.file.path","message","event.original"],
  "query": {
    "bool": {
      "should": [
        { "match_phrase": { "log.file.path": "gpsvc.log" } },
        { "query_string": { "default_field": "log.file.path", "query": "*gpsvc.log" } }
      ],
      "minimum_should_match": 1
    }
  },
  "sort": [{ "@timestamp": "asc" }]
}

### phase02 - gpsvc count
GET paloalto-linux-messages-*/_count
{
  "query": {
    "bool": {
      "should": [
        { "match_phrase": { "log.file.path": "gpsvc.log" } },
        { "query_string": { "default_field": "log.file.path", "query": "*gpsvc.log" } }
      ],
      "minimum_should_match": 1
    }
  }
}

### phase02 - unmarshal session errors (key IOC)
GET paloalto-linux-messages-*/_search
{
  "size": 20,
  "track_total_hits": true,
  "_source": ["@timestamp","log.file.path","message","event.original"],
  "query": {
    "query_string": {
      "query": "message:\"failed to unmarshal session\" OR event.original:\"failed to unmarshal session\""
    }
  },
  "sort": [{ "@timestamp": "asc" }]
}

### phase03 - session artifacts (list)
GET paloalto-linux-messages-*/_search
{
  "size": 50,
  "_source": ["@timestamp","log.file.path","message","event.original"],
  "query": {
    "query_string": {
      "query": "(message:*\"/tmp/sslvpn/session_\" OR event.original:*\"/tmp/sslvpn/session_\") OR (message:*\"failed to load file /tmp/sslvpn/session_\" OR event.original:*\"failed to load file /tmp/sslvpn/session_\")"
    }
  },
  "sort": [{ "@timestamp": "asc" }]
}

### phase03 - session artifacts (first/last)
GET paloalto-linux-messages-*/_search
{
  "size": 0,
  "query": {
    "query_string": {
      "query": "(message:*\"/tmp/sslvpn/session_\" OR event.original:*\"/tmp/sslvpn/session_\") OR (message:*\"failed to load file /tmp/sslvpn/session_\" OR event.original:*\"failed to load file /tmp/sslvpn/session_\")"
    }
  },
  "aggs": {
    "first_seen": { "min": { "field": "@timestamp" } },
    "last_seen":  { "max": { "field": "@timestamp" } },
    "per_hour":   { "date_histogram": { "field": "@timestamp", "fixed_interval": "1h", "min_doc_count": 1 } }
  }
}

### phase03 - hipreport.esp (SSLVPN)
GET paloalto-sslvpn-access-*/_search
{
  "size": 50,
  "_source": ["@timestamp","url.path","http.request.method","client.ip","source.ip","user_agent.original","message","event.original"],
  "query": { "query_string": { "query": "(url.path:*hipreport.esp* OR message:*hipreport.esp* OR event.original:*hipreport.esp*)" } },
  "sort": [{"@timestamp":"asc"}]
}

### phase03 - hipreport.esp (NGINX fallback)
GET paloalto-nginx-access-*/_search
{
  "size": 50,
  "_source": ["@timestamp","url.path","http.request.method","client.ip","source.ip","user_agent.original","message","event.original"],
  "query": { "query_string": { "query": "(url.path:*hipreport.esp* OR message:*hipreport.esp* OR event.original:*hipreport.esp*)" } },
  "sort": [{"@timestamp":"asc"}]
}

### phase03 - descobrir campos de IP/UA (SSLVPN e NGINX)
GET paloalto-sslvpn-access-*/_field_caps?fields=client.ip,source.ip,user_agent.original,url.path,http.request.method
GET paloalto-nginx-access-*/_field_caps?fields=client.ip,source.ip,user_agent.original,url.path,http.request.method


GET paloalto-sslvpn-access-*/_search
{
  "size": 0,
  "query": { "query_string": { "query": "(url.path:*hipreport.esp* OR message:*hipreport.esp* OR event.original:*hipreport.esp*)" } },
  "aggs": { "by_ip": { "terms": { "field": "client.ip", "size": 20, "missing": "0.0.0.0" } } }
}
